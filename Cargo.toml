build = "build.rs"

[package]
edition = "2021"
authors = ["Manuel Sopena Ballesteros <msopena@cscs.ch>"]
name = "manta"
description = "Another CLI for basic/simple Shasta operations"
version = "0.6.28"
license-file = "LICENSE"
documentation = "https://github.com/eth-cscs/manta/blob/main/README.md"
homepage = "https://github.com/eth-cscs/manta/blob/main/README.md"
repository = "https://github.com/eth-cscs/manta"
publish = false # cargo dist --> Avoid publishing to crates.io

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
<<<<<<< Updated upstream
mesa = "0.7.0"
=======
mesa = "0.8.1"
>>>>>>> Stashed changes
reqwest = { version = "0.11", features = ["blocking", "json", "rustls-tls", "socks"] }
serde = { version = "1.0.145", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9.17"
log = "0.4.17"
log4rs = "1.2.0" # Docs about pattern encoder https://docs.rs/log4rs/0.10.0/log4rs/encode/pattern/index.html
tokio = { version = "1", features = ["full"] }
tokio-util = "0.7.4"       # used by manta_console to create a read stream from container stdout
tokio-stream = "0.1.11"    # used by manta_console to create a read stream from container stdout (alternative?)
kube = { version = "0.83.0", features = ["kube-client", "kube-runtime", "derive", "rustls-tls", "ws"] }
k8s-openapi = { version = "0.18.0" }
hyper = { version = "0.14", features = ["full"] } # needed by kube-rs (to operate with kube api)
futures-util = "0.3.24"
clap = { version =  "4.0.32", features = ["derive", "cargo"] }
clap_complete = "4.0.3"
git2 = "0.17.0"
dialoguer = "0.10.2"
substring = "1.4.5"
regex = "1.6.0"
directories = "4.0.1" # XDG Base Directory Specification
config = { version = "0.13.2", features = ["toml"] } # used to read manta configuration file
comfy-table = "6.1.1" # used to print output std as tables
tracing-subscriber = "0.3.16"
termion = "2.0.1" # used by manta_console to enable terminal raw
dhat = "0.3.2"
base64 = "0.13.1"
cargo-dist = "0.0.7"

[build-dependencies]
clap = "*"
clap_complete = "*"

[profile.release]
opt-level = "s" # Tell `rustc` to optimize for small code size.
#incremental = true
debug = 1

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.0.7"
# The preferred Rust toolchain to use in CI (rustup toolchain syntax)
rust-toolchain-version = "1.67.1"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu"]
# CI backends to support (see 'cargo dist generate-ci')
ci = [ "github" ]
# The installers to generate for each app
installers = []
# Whether to consider the binaries in a package for distribution (defaults true)
dist = true

#[features]
#dhat-heap = []    # if you are doing heap profiling
#dhat-ad-hoc = []  # if you are doing ad hoc profiling
